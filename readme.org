#+TITLE: Acoustic Beacons

* Overview

The Modem class in ~classes/modem.py~ provides an interface to Delphis subsea acoustic modems.

Multiple nodes form an acoustic telemetry network. Each *node* is a Raspberry Pi with an attached acoustic modem.

All nodes contain identical code. When a node starts up, it checks the address of the attached modem and runs using associated parameters from ~config.yaml~.

A mode can also be specified from the command line for testing purposes, ignoring the mode in ~config.yaml~.

** Modes
Depending on the specified mode, the node will perform a different task:

*** Operational modes

- Set address (~./beacons.py set xxx~): sets the address of the attached modem to ~xxx~, then exits.

- Active mode (~./beacons.py active~) runs two threads:
  1) Cyclically send range pings to all passive beacons
  2) Parse incoming range returns and broadcasts from passive beacons

- Passive mode (~./beacons.py passive~) runs two threads:
  1) Monitor GPS serial port for position updates
  2) Periodically broadcast current position

*** Testing/debug modes

- Timer mode (~./beacons.py timer P~ or ~./beacons.py timer P xxx~) periodically (with period ~P~) broadcasts (or unicasts to modem ~xxx~) the current time from the node's Raspberry Pi.

- Report mode (~./beacons.py report~) prints all incoming messages.


** Deploying

If all Raspberry Pi's have an entry in ~$HOME/.ssh/config~, ~deploy.sh~ can be used to copy code and configuration using ~scp~.

* TODO In-progress
- Implement position estimator
- Implement a local coordinate mode
